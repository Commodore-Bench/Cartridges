;
; File generated by cc65 v 2.18 - Git 947dd9a
;
	.fopt		compiler,"cc65 v 2.18 - Git 947dd9a"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.import		_kbhit
	.import		_cputs
	.import		_cgetc
	.import		_revers
	.import		_textcolor
	.import		_joy_read
	.export		_waitKey

.segment	"RODATA"

S0001:
	.byte	$D0,$D2,$C5,$D3,$D3,$20,$C1,$20,$CB,$C5,$D9,$00

; ---------------------------------------------------------------
; unsigned char __near__ waitKey (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_waitKey: near

.segment	"CODE"

;
; revers(1);
;
	lda     #$01
	jsr     _revers
;
; textcolor(COLOR_VIOLET);
;
	lda     #$04
	jsr     _textcolor
;
; cputs("PRESS A KEY");
;
	lda     #<(S0001)
	ldx     #>(S0001)
	jsr     _cputs
;
; revers(0);
;
	lda     #$00
	jsr     _revers
;
; while(getJoy());
;
L0002:	jsr     _getJoy
	stx     tmp1
	ora     tmp1
	bne     L0002
;
; if (kbhit())
;
L0005:	jsr     _kbhit
	tax
	beq     L0008
;
; return cgetc();
;
	jmp     _cgetc
;
; if (getJoy())
;
L0008:	jsr     _getJoy
	stx     tmp1
	ora     tmp1
	beq     L0005
;
; while(getJoy());
;
L000A:	jsr     _getJoy
	stx     tmp1
	ora     tmp1
	bne     L000A
;
; return 0;
;
	tax
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; int __near__ getJoy (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_getJoy: near

.segment	"CODE"

;
; uint8_t debounce = 0;
;
	lda     #$00
	sta     M0001
;
; if (joy_read(JOY_2) & JOY_MASK)
;
	lda     #$01
	jsr     _joy_read
	ldx     #$00
	and     #$1F
	beq     L0008
;
; while (++debounce);
;
L0003:	inc     M0001
	bne     L0003
;
; if (joy_read(JOY_2) & JOY_MASK)
;
	lda     #$01
	jsr     _joy_read
	ldx     #$00
	and     #$1F
	beq     L0008
;
; return 1;
;
	lda     #$01
	rts
;
; }
;
L0008:	rts

.segment	"BSS"

M0001:
	.res	1,$00

.endproc

