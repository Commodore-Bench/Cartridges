;
; File generated by cc65 v 2.18 - Git 947dd9a
;
	.fopt		compiler,"cc65 v 2.18 - Git 947dd9a"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.import		_clrscr
	.import		_gotoxy
	.import		_cputc
	.import		_textcolor
	.import		_bgcolor
	.import		_bordercolor
	.import		_chline
	.import		_cvlinexy
	.import		_cclearxy
	.export		_clearArea
	.export		_drawFrame
	.export		_initScreen

; ---------------------------------------------------------------
; void __near__ clearArea (int xpos, int ypos, int xsize, int ysize)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_clearArea: near

.segment	"CODE"

;
; {
;
	jsr     pushax
;
; int y = ypos;
;
	ldy     #$05
	jsr     ldaxysp
	sta     M0001
	stx     M0001+1
;
; for (y=ypos;y<(ypos+ysize);++y)
;
	ldy     #$05
	jsr     ldaxysp
	sta     M0001
	stx     M0001+1
L0002:	lda     M0001
	ldx     M0001+1
	jsr     pushax
	ldy     #$03
	jsr     ldaxysp
	clc
	ldy     #$06
	adc     (sp),y
	pha
	txa
	iny
	adc     (sp),y
	tax
	pla
	jsr     tosicmp
	bpl     L0003
;
; cclearxy(xpos,y,xsize);
;
	ldy     #$06
	lda     (sp),y
	jsr     pusha
	lda     M0001
	jsr     pusha
	ldy     #$04
	lda     (sp),y
	jsr     _cclearxy
;
; for (y=ypos;y<(ypos+ysize);++y)
;
	inc     M0001
	bne     L0002
	inc     M0001+1
	jmp     L0002
;
; }
;
L0003:	jmp     incsp8

.segment	"BSS"

M0001:
	.res	2,$00

.endproc

; ---------------------------------------------------------------
; void __near__ drawFrame (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_drawFrame: near

.segment	"CODE"

;
; gotoxy(0, 0);
;
	lda     #$00
	jsr     pusha
	jsr     _gotoxy
;
; cputc(CH_ULCORNER);
;
	lda     #$B0
	jsr     _cputc
;
; gotoxy(SCREENW-1, 0);
;
	lda     #$27
	jsr     pusha
	lda     #$00
	jsr     _gotoxy
;
; cputc(CH_URCORNER);
;
	lda     #$AE
	jsr     _cputc
;
; cvlinexy(0, 1, SCREENH - 3);
;
	lda     #$00
	jsr     pusha
	lda     #$01
	jsr     pusha
	lda     #$16
	jsr     _cvlinexy
;
; cputc(CH_LLCORNER);
;
	lda     #$AD
	jsr     _cputc
;
; chline(SCREENW - 2);
;
	lda     #$26
	jsr     _chline
;
; cputc(CH_LRCORNER);
;
	lda     #$BD
	jsr     _cputc
;
; cvlinexy(SCREENW - 1, 1, SCREENH - 3);
;
	lda     #$27
	jsr     pusha
	lda     #$01
	jsr     pusha
	lda     #$16
	jmp     _cvlinexy

.endproc

; ---------------------------------------------------------------
; void __near__ initScreen (unsigned char border, unsigned char bg, unsigned char text)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_initScreen: near

.segment	"CODE"

;
; {
;
	jsr     pusha
;
; bordercolor(border);
;
	ldy     #$02
	lda     (sp),y
	jsr     _bordercolor
;
; bgcolor(bg);
;
	ldy     #$01
	lda     (sp),y
	jsr     _bgcolor
;
; textcolor(text);
;
	ldy     #$00
	lda     (sp),y
	jsr     _textcolor
;
; clrscr();
;
	jsr     _clrscr
;
; }
;
	jmp     incsp3

.endproc

